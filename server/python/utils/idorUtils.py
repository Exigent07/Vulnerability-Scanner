from flask import Flask, request, jsonify
import requests
from utils.requestsUtils import send_request

app = Flask(__name__)

@app.route('/request', methods=['POST'])
def receive_json():
    try:
        print(request.url)
        json_data = request.json
        print('Received JSON data:', json_data)

        if not isinstance(json_data, dict):
            raise ValueError('Invalid JSON data format. Expected a JSON object.')

        url = json_data.get('url')
        method = json_data.get('method', 'GET')
        data = json_data.get('data')
        headers = json_data.get('headers')

        print('URL:', url)
        print('Method:', method)
        print('Data:', data)
        print('Headers:', headers)

        response_data = send_request(url, data=data, method=method, headers=headers)

        return jsonify(response_data)
    except Exception as e:
        print(f'Error processing JSON data: {e}')
        return jsonify({'error': str(e)}), 500

@app.route('/idor', methods=['POST'])
def test_idor_vulnerability(url, parameters):
    
    # Wildcard Characters
    for i in "*%_.":
        target_url = f"{url}/users/{i}"
        
        response = requests.get(target_url)
        receive_json()
        
        if response.status_code == 200:
            print(f"IDOR vulnerability found!")
            print("Response content:")
            print(response.text)
        else:
            print(f"No IDOR vulnerability found!")
    
    
    for i in range(10):
        target_url = f"{url}/{i}"
        
        response = requests.get(target_url)
        
        if response.status_code == 200:
            print(f"IDOR vulnerability found!")
            print("Response content:")
            print(response.text)
        else:
            print(f"No IDOR vulnerability found!")
    
    # JSON
    try:
        target_url = f"{url}.json"
        
        response = requests.get(target_url)
        
        if response.status_code == 200:
            print(f"IDOR vulnerability found!")
            print("Response content:")
            print(response.text)
        else:
            print(f"No IDOR vulnerability found!")
    except:
        None
    
    # Parameters
    for parameter in parameters:
        for no in range(10):
            target_url = f"{url}?{parameter}={no}"
    
            response = requests.get(target_url)

            if response.status_code == 200:
                print(f"IDOR vulnerability found!")
                print("Response content:")
                print(response.text)
            else:
                print(f"No IDOR vulnerability found!")

if __name__ == '__main__':
    app.run(debug=True, port=1337) 
    target_url = "http://localhost:1234"
    parameters = ["use", "id", "userid", "username", "user", "blog", "post", "info", "profile", "obj", "object", "query","create", "delete", "edit", "retrieve", "get", "put", "patch", "del", ":id"]
    test_idor_vulnerability(target_url, parameters)
