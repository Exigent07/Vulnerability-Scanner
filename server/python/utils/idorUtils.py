from flask import Flask, request, jsonify
import requests
from utils.requestsUtils import send_request

app = Flask(__name__)
sus_idor = ""

@app.route('/request', methods=['POST'])
def receive_json():
    try:
        print(request.url)
        json_data = request.json
        print('Received JSON data:', json_data)

        if not isinstance(json_data, dict):
            raise ValueError('Invalid JSON data format. Expected a JSON object.')

        url = json_data.get('url')
        method = json_data.get('method', 'GET')
        data = json_data.get('data')
        headers = json_data.get('headers')

        print('URL:', url)
        print('Method:', method)
        print('Data:', data)
        print('Headers:', headers)

        response_data = send_request(url, data=data, method=method, headers=headers)

        return jsonify(response_data)
    except Exception as e:
        print(f'Error processing JSON data: {e}')
        return jsonify({'error': str(e)}), 500

@app.route('/idor', methods=['POST'])
def test_idor_vulnerability(url, endpoints, parameters):
    sus_url = ""
    # Wildcard Characters
    wildchars = "*%_."
    for char in wildchars:
        target_url = f"{url}/users/{char}"
        
        response = requests.get(target_url)
        resp_check = response.content
        # receive_json()
        if ((response.status_code == 200) & (sus_url == "")):
            sus_url = target_url
            sus_check = response.content
            print(f"\nTARGET URL: {target_url}")
            print(f"SUS URL: {sus_url}")
            print(f"Suspected IDOR vulnerability!")
        
        if ((response.status_code == 200) & (sus_url != "")):
            if (resp_check != sus_check):
                print(f"\nTARGET URL: {target_url}")
                print(f"SUS URL: {sus_url}")
                print(f"Res code: {response.status_code}")
                print(f"IDOR vulnerability found!")
                return target_url
        else:
            print(f"\nTARGET URL: {target_url}")
            print("No IDOR vulnerability found!")
            
    
    
    for i in range(51):
        target_url = f"{url}/{i}"
        
        response = requests.get(target_url)
        resp_check = response.content
        
        if ((response.status_code == 200) & (sus_url == "")):
            sus_url = target_url
            sus_check = response.content
            print(f"\nTARGET URL: {target_url}")
            print(f"SUS URL: {sus_url}")
            print(f"Suspected IDOR vulnerability!")
        
        if ((response.status_code == 200) & (sus_url != "")):      
            if (resp_check != sus_check):
                print(f"\nTARGET URL: {target_url}")
                print(f"SUS URL: {sus_url}")
                print(f"IDOR vulnerability found!")
                return target_url
        else:
            print(f"\nTARGET URL: {target_url}")
            print(f"No IDOR vulnerability found!")
    
    # JSON
    # json_idor = True
    while json_idor:
        try:
            target_url = f"{url}.json"
        
            response = requests.get(target_url)
            resp_check = response.content
        
            if ((response.status_code == 200) & (sus_url == "")):
                sus_url = target_url
                sus_check = response.content
                print(f"\nTARGET URL: {target_url}")
                print(f"SUS URL: {sus_url}")
                print(f"Suspected IDOR vulnerability!")
                json_idor = False
        
            if ((response.status_code == 200) & (sus_url != "") ):
                if (resp_check != sus_check):
                    print(f"\nTARGET URL: {target_url}")
                    print(f"SUS URL: {sus_url}")
                    print(f"IDOR vulnerability found!") 
                    return target_url
                else:
                    print(f"\nTARGET URL: {target_url}")
                    print(f"No IDOR vulnerability found!")
        except:
            json_idor = False
    
    # Endpoints
    for endpoint in endpoints:
        for no in range(51):
            target_url = f"{url}/{endpoint}/{no}"
            
            response = requests.get(target_url)
            resp_check = response.content
            
            if ((response.status_code == 200) & (sus_url == "")):
                sus_url = target_url
                sus_check = response.content
                print(f"\nTARGET URL: {target_url}")
                print(f"SUS URL: {sus_url}")    
                print(f"Suspected IDOR vulnerability!")
            
            if ((response.status_code == 200) & (sus_url != "")):
                if (resp_check != sus_check):
                    print(f"\nTARGET URL: {target_url}")
                    print(f"SUS URL: {sus_url}")
                    print(f"IDOR vulnerability found!")
                    return sus_url
        else:
            print(f"\nTARGET URL: {target_url}")
            print(f"No IDOR vulnerability found!")
    
    # Parameters
    for parameter in parameters:
        for no in range(51):
            target_url = f"{url}/?{parameter}={no}"
    
            response = requests.get(target_url)
            resp_check = response.content

            if ((response.status_code == 200) & (sus_url == "")):
                sus_url = target_url
                sus_check = response.content
                print(f"\nTARGET URL: {target_url}")
                print(f"SUS URL: {sus_url}")    
                print(f"Suspected IDOR vulnerability!")
            
            if ((response.status_code == 200) & (sus_url != "")):
                if (resp_check != sus_check):
                    print(f"\nTARGET URL: {target_url}")
                    print(f"SUS URL: {sus_url}")
                    print(f"IDOR vulnerability found!")
                    return sus_url
        else:
            print(f"\nTARGET URL: {target_url}")
            print(f"No IDOR vulnerability found!")

if __name__ == '__main__':
    app.run(debug=True, port=1337) 
    target_url = "http://192.168.11.20"
    endpoints = ["users","profile","account","settings","dashboard","admin/users","admin/settings","admin/dashboard","resource","document","file","post","article"]
    parameters = ["user_id", "id", "query", "search", "filter", "category", "type", "sort", "order", "page","token","auth_token","session_id"]
    test_idor_vulnerability(target_url, endpoints, parameters)
