from flask import Flask, request, jsonify
from utils.requestsUtils import send_request
from utils.loginUtils import send_sql_injection_request
import subprocess

app = Flask(__name__)

@app.route('/dirsearch', methods=['POST'])
def run_dirsearch(url):
    try:
        command = f"dirsearch -u {url}"
        subprocess.run(command, shell=True, check=True)
        
    except subprocess.CalledProcessError as e:
        print(f"Error: {e}")
    except Exception as e:
        print(f"An error occurred: {e}")

@app.route('/request', methods=['POST'])
def receive_json():
    try:
        print(request.url)
        json_data = request.json
        print('Received JSON data:', json_data)

        if not isinstance(json_data, dict):
            return { 'error': 'Not a json'};

        url = json_data.get('url')
        method = json_data.get('method', 'GET')
        data = json_data.get('data')
        headers = json_data.get('headers')

        print('URL:', url)
        print('Method:', method)
        print('Data:', data)
        print('Headers:', headers)

        response_data = send_request(url, data=data, method=method, headers=headers)

        return jsonify(response_data)
    except Exception as e:
        print(f'Error processing JSON data: {e}')
        return jsonify({'error': str(e)}), 500

@app.route('/fileupload', methods=['POST'])
def get_info():
    try:
        print(request.url)
        json_data = request.json
        print('Received JSON data:', json_data)

        if not isinstance(json_data, dict):
            raise ValueError('Invalid JSON data format. Expected a JSON object.')

        url = json_data.get('url')
        method = json_data.get('method', 'GET')
        data = json_data.get('data')
        headers = json_data.get('headers')

        print('URL:', url)
        print('Method:', method)
        print('Data:', data)
        print('Headers:', headers)

        response_data = send_request(url, data=data, method=method, headers=headers)

        return jsonify(response_data)
    except Exception as e:
        print(f'Error processing JSON data: {e}')
        return jsonify({'error': str(e)}), 500

@app.route('/login', methods=['POST'])
def get_login():
    try:
        print(request.url)
        json_data = request.json
        print('Received JSON data:', json_data)

        if not isinstance(json_data, dict):
            return { 'error': 'Not a json'};

        url = json_data.get('url')
        data = json_data.get('data')

        print('URL:', url)
        print('Data:', data)

        result = send_sql_injection_request(url=url, formDataNames=data)
        if result:
            return result
        else:
            return { 'error': 'Cannot Login' }

    except Exception as e:
        print(f"Error: {e}")
        return { 'error': 'failed' }

if __name__ == '__main__':
    app.run(debug=True, port=1338)
