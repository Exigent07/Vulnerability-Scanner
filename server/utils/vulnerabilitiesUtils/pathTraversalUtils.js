const { curlRequest } = require('../curlUtils');
const pathTraversalPayloads = require('../../payloads/pathTraversal');
const paramsPayloads = require('../../payloads/params');

// check traversal 
async function checkTraversal(testResponse, currentResponse) {
    const testBody = testResponse.response;
    const currentBody = currentResponse.response;

    const passwdPattern = /root:.+:0:0:/igm;

    if (currentBody !== testBody && passwdPattern.test(currentBody)) {
        return true;
    } else {
        return false;
    }
}


// To check path traversal
async function pathTraversal(targetURL, cookie) {
    let traversalResult = {};
    let firstResponse = true;
    let testResponse;
    for (const param of paramsPayloads) {
        for (const payload of pathTraversalPayloads) {
            const url = `${targetURL}?${param}=${payload}`;
            // For testing sake logging the URL
            console.log(`Testing URL: ${url}`);
            try {
                const response = await curlRequest(url, {Headers: {
                    
                }});
                if (firstResponse) {
                    testResponse = response;
                    firstResponse = false;
                }

                const isTraversed = await checkTraversal(testResponse, response);

                if (isTraversed) {
                    console.log(`Traversed for ${param}: ${payload}`);
                    traversalResult[param] = {
                        url: url,
                        payload: payload,
                    }
                }

            } catch (error) {
                console.error(`Error sending request: ${error}`);
                return { data: "Internal Server Error" };
            }
        }
    }

    return { data : traversalResult }
}

module.exports = {
    pathTraversal
};