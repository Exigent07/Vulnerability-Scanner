import React, { useState } from 'react';
import './Scan.css';

function App() {
  const [additionalForms, setAdditionalForms] = useState([]);
  const [formData, setFormData] = useState({
    scanType: '',
    apiKey: '',
    addMore: '', 
  });

  const handleInputChange = (e) => {
    const { name, value } = e.target;
    const selectElement = document.getElementById('addMore');
    if (name === 'scanType') {
      if (value === 'full') {
        setAdditionalForms([]);
      }
      if (value === 'custom') {
        selectElement.disabled = false;
        document.getElementById('spawnOptions').disabled = false;
      } else {
        selectElement.disabled = true;
        selectElement.selectedIndex = 0;
        document.getElementById('spawnOptions').disabled = true;
      }
    } else if (name === 'addMore') {
      setFormData((prevData) => ({
        ...prevData,
        addMore: value,
      }));
    }
    setFormData((prevData) => ({
      ...prevData,
      [name]: value,
    }));
  };

  const handleAddMore = () => {
    console.log('Add more clicked');
    const selectedOption = formData.addMore;
    if (additionalForms.length < 5 && selectedOption) {
      const newForm = <input key={additionalForms.length} name={`additionalInput${additionalForms.length}`} value={selectedOption} readOnly />;
      setAdditionalForms((prevForms) => [...prevForms, newForm]);
      setFormData((prevData) => ({
        ...prevData,
        addMore: '',
      }));
      const selectElement = document.getElementById('addMore');
      selectElement.remove(selectElement.selectedIndex);
      if (selectElement.options.length === 0) {
        selectElement.innerHTML = '<option value="">--Empty--</option>';
        document.getElementById('spawnOptions').disabled = true;
      }
    }
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    const { scanType, apiKey, addMore } = formData;
    const endpoint = `http://localhost:1337/api/${scanType}`;
    
    try {
      const response = await fetch(endpoint, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ apiKey, additionalData: addMore }),
      });
      const data = await response.json();
      console.log(data);
    } catch (error) {
      console.error('Error:', error);
    }
  };

  return (
    <div>
      <header id='scan'>
        <h1>Ready to scan?</h1>
        <p>Fill out these, and wait for the result (Note: Full Scan may take several hours.)</p>
      </header>
      <main id='mainScan'>
        <div className="left-align">
          <form id='submitScan' onSubmit={handleSubmit}>
            <div>
              <label htmlFor="scanType">Choose a scan type</label>
              <select className='select' name="scanType" tabIndex="1" id="scanType" onChange={handleInputChange}>
                <option className='selectopt' value="full">Full Scan (Takes time)</option>
                <option value="custom">Custom (Custom Selection)</option>
              </select>
            </div>
            <div id='api'>
              <label htmlFor='apiKey'>Enter your API Key</label>
              <input id='apiKey' name="apiKey" onChange={handleInputChange} />
            </div>
            <div id='add'>
              <label htmlFor='addMore'>Select Custom</label>
              <select id="addMore" name="addMore" onChange={handleInputChange} disabled>
                <option value="">--Select an option--</option>
                <option value="sqli">SQLi (SQL Injection)</option>
                <option value="missing">Missing Headers (might be a potential threat)</option>
                <option value="tech">Outdated (Check for outdated)</option>
              </select>
            </div>
            <div id='btns'>
              <button id='spawnOptions' type="button" onClick={handleAddMore} >Add</button>
              <button type="submit">Submit</button>
            </div>
            {additionalForms.map((form, index) => (
              <div key={index}>{form}</div>
            ))}
          </form>
        </div>
      </main>
    </div>
  );
}

export default App;
